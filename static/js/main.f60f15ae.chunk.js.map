{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/Loader/Loader.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","Loader","FindMovie","addToList","useState","searchQuerry","setSearchQuerry","setMovie","isLoading","setIsLoading","isNoFilm","setIsNoFilm","onSubmit","event","query","preventDefault","fetch","then","res","json","Response","Error","Title","Plot","Poster","imdbID","catch","error","console","log","htmlFor","type","id","placeholder","value","onChange","target","ClassNames","disabled","onClick","App","setMovies","newMovie","some","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f60f15ae.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport ClassNames from 'classnames';\n\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { Loader } from '../Loader';\nimport './FindMovie.scss';\n\ninterface Props {\n  addToList: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addToList }) => {\n  const [searchQuerry, setSearchQuerry] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNoFilm, setIsNoFilm] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event?.preventDefault();\n    setIsLoading(true);\n\n    getMovie(searchQuerry)\n      .then(res => {\n        setMovie({\n          title: res.Title,\n          description: res.Plot,\n          imgUrl: res.Poster !== 'N/A' ? res.Poster\n            : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n          imdbId: res.imdbID,\n          imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n        });\n        setIsLoading(false);\n        setIsNoFilm(false);\n      })\n      .catch(error => {\n        setMovie(null);\n        // eslint-disable-next-line no-console\n        console.log(error);\n        setIsLoading(false);\n        setIsNoFilm(true);\n      });\n  };\n\n  const handleAddFilmToList = () => {\n    if (movie) {\n      addToList(movie);\n    }\n\n    setMovie(null);\n    setIsNoFilm(false);\n    setSearchQuerry('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchQuerry}\n              onChange={event => {\n                setIsNoFilm(false);\n                setSearchQuerry(event.target.value);\n              }}\n            />\n          </div>\n\n          {isNoFilm && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={ClassNames(\n                'button is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={!searchQuerry}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddFilmToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {!isLoading ? (\n        <>\n          {movie && (\n            <div className=\"container\" data-cy=\"previewContainer\">\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard movie={movie} />\n            </div>\n          )}\n        </>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=93e4a9dd';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .then(res => {\n      if (res.Response === 'False') {\n        throw new Error('error in fetching data');\n      }\n\n      return res;\n    });\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovieToList = (newMovie: Movie) => {\n    if (movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies(state => [...state, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addToList={addMovieToList}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}